"""empty message

Revision ID: 2491bd4a5cdc
Revises: 
Create Date: 2023-06-18 18:22:36.740908

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2491bd4a5cdc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('screening_kit_details')
    op.drop_table('lab_test')
    op.drop_table('users')
    op.drop_table('meterial')
    op.drop_table('clab_kit_preparation')
    op.drop_table('cro_protocol')
    op.drop_table('cro')
    op.drop_table('sitedata')
    op.drop_table('sponsor')
    op.drop_table('visit_kit_details')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('visit_kit_details',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('protocol_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('visit_kit_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lab_test_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('meterial_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['protocol_id'], ['cro_protocol.id'], name='visit_kit_details_protocol_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='visit_kit_details_pkey')
    )
    op.create_table('sponsor',
    sa.Column('sponsor_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('sponsor_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sponsor_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('legal_sponsor_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_2', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_3', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_4', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('office_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extension', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='sponsor_user_id_fkey'),
    sa.PrimaryKeyConstraint('sponsor_id', name='sponsor_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sitedata',
    sa.Column('site_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('site_data_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('site_data_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('legal_site_data_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_2', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_3', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_4', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('office_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extension', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='sitedata_user_id_fkey'),
    sa.PrimaryKeyConstraint('site_id', name='sitedata_pkey')
    )
    op.create_table('cro',
    sa.Column('cro_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('cro_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cro_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('legal_cro_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_2', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_3', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_4', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('office_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extension', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='cro_user_id_fkey'),
    sa.PrimaryKeyConstraint('cro_id', name='cro_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cro_protocol',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('protocol_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('protocol_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sponsor_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('cro_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('no_of_visits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_patients', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('no_of_screens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cro_id'], ['cro.cro_id'], name='cro_protocol_cro_id_fkey'),
    sa.ForeignKeyConstraint(['sponsor_id'], ['sponsor.sponsor_id'], name='cro_protocol_sponsor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cro_protocol_pkey'),
    sa.UniqueConstraint('protocol_id', name='cro_protocol_protocol_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('clab_kit_preparation',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('protocol_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('central_lab_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kit_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('preparation_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('assigned_site_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['protocol_id'], ['cro_protocol.id'], name='clab_kit_preparation_protocol_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='clab_kit_preparation_pkey')
    )
    op.create_table('meterial',
    sa.Column('meterial_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('size', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('meterial_id', name='meterial_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('logged_in_ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_logged_in', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_otp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('otp_sent_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_logged_in', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('lab_test',
    sa.Column('lab_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('lab_id', name='lab_test_pkey')
    )
    op.create_table('screening_kit_details',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('protocol_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('screening_kit_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lab_test_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('meterial_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['protocol_id'], ['cro_protocol.id'], name='screening_kit_details_protocol_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='screening_kit_details_pkey')
    )
    # ### end Alembic commands ###
